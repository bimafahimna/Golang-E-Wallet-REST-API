// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// UserController is an autogenerated mock type for the UserController type
type UserController struct {
	mock.Mock
}

// ForgotPassword provides a mock function with given fields: ctx
func (_m *UserController) ForgotPassword(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetDetails provides a mock function with given fields: ctx
func (_m *UserController) GetDetails(ctx *gin.Context) {
	_m.Called(ctx)
}

// Login provides a mock function with given fields: ctx
func (_m *UserController) Login(ctx *gin.Context) {
	_m.Called(ctx)
}

// Register provides a mock function with given fields: ctx
func (_m *UserController) Register(ctx *gin.Context) {
	_m.Called(ctx)
}

// ResetPassword provides a mock function with given fields: ctx
func (_m *UserController) ResetPassword(ctx *gin.Context) {
	_m.Called(ctx)
}

type mockConstructorTestingTNewUserController interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserController creates a new instance of UserController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserController(t mockConstructorTestingTNewUserController) *UserController {
	mock := &UserController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
