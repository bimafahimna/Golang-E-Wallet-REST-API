// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"
	models "golang-e-wallet-rest-api/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// SourceOfFundRepository is an autogenerated mock type for the SourceOfFundRepository type
type SourceOfFundRepository struct {
	mock.Mock
}

// GetByName provides a mock function with given fields: ctx, sourceName
func (_m *SourceOfFundRepository) GetByName(ctx context.Context, sourceName *string) (*models.SourceOfFund, error) {
	ret := _m.Called(ctx, sourceName)

	var r0 *models.SourceOfFund
	if rf, ok := ret.Get(0).(func(context.Context, *string) *models.SourceOfFund); ok {
		r0 = rf(ctx, sourceName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.SourceOfFund)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *string) error); ok {
		r1 = rf(ctx, sourceName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSourceOfFundRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewSourceOfFundRepository creates a new instance of SourceOfFundRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSourceOfFundRepository(t mockConstructorTestingTNewSourceOfFundRepository) *SourceOfFundRepository {
	mock := &SourceOfFundRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
